print(capitaldata)
source('~/.active-rstudio-document')
capitaldata<-read.table(Users/deepanshatewary/Downloads/CapitalAccountBalances.csv)
importdata<-read.table(Users/deepanshatewary/Downloads/CapitalAccountBalances.csv)
importdata<-read.csv(Users/deepanshatewary/Downloads/CapitalAccountBalances.csv)
print(importdata)
importdata
getwd
getwd()
print(importdata)
getwd()
atewary/Documents/Trading Desk/DesiredOutput.csv")
sqldf("select * from cab")
df1 = data.frame(id=1:10,class=rep(c("case","ctrl"),5))
df1
do<-read.csv(file="Users/deepanshatewary/Documents/Trading Desk/DesiredOutput.csv")
#do<-read.csv(file="Users/deepanshatewary/Documents/Trading Desk/DesiredOutput.csv")
cab
cab<-read.table(file="Users/deepanshatewary/Documents/Trading Desk/CapitalAcoountBalances.csv")
source('~/Documents/Yahoo Finance/finance.R', echo=TRUE)
install.packages("quantmod")
install.packages("quantmod")
install.packages("ggplot2")
write.csv(returns, file = "SPYReturn.csv")
source('~/Documents/Yahoo Finance/finance.R', echo=TRUE)
ggplot(data2015, aes(data2015$Date, data2015$Close)) + geom_line() +
scale_x_date(format = "%b") + xlab("2015") + ylab("CLosing Price for the year of 2015") +
geom_vline(aes(as.Date("2015-07-01"))) + geom_hline(aes(min(data2015$Close)))
ggplot(data2015, aes(data2015$Date, data2015$Close)) + geom_line() +
xlab("2015") + ylab("CLosing Price for the year of 2015") +
geom_vline(aes(as.Date("2015-07-01"))) + geom_hline(aes(min(data2015$Close)))
dec<-as.Date("2015-12-31")
setwd('~/Documents/Yahoo Finance')
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%Y")
jan<-as.Date("2015-01-01")
dec<-as.Date("2015-12-31")
data2015 <- subset(finance, finance$Date >= jan  & finance$Date <= dec)
print(data2015$Date)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%Y")
print(finance$Date)
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
source('~/Documents/Yahoo Finance/finance.R', echo=TRUE)
install.packages("quantmod")
source('~/Documents/Yahoo Finance/finance.R', echo=TRUE)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("quantmod")
install.packages("ggplot2")
library(quantmod)
library(ggplot2)
setwd('~/Documents/Yahoo Finance')
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
jan<-as.Date("2015-01-01")
dec<-as.Date("2015-12-31")
data2015 <- subset(finance, finance$Date >= jan  & finance$Date <= dec)
print(data2015$Date)
ggplot(data2015, aes(data2015$Date, data2015$Close)) + geom_line() +
xlab("2015") + ylab("CLosing Price for the year of 2015") +
geom_vline(aes(as.Date("2015-07-01"))) + geom_hline(aes(min(data2015$Close)))
#abline(v=as.Date("2015-07-01"), h=min(data2015$Close))
ts<-xts(data2015$Close,data2015$Date)
returns<-data.frame(monthlyReturn(ts))
write.csv(returns, file = "SPYReturn.csv")
install.packages("ggplot2")
library(quantmod)
library(ggplot2)
setwd('~/Documents/Yahoo Finance')
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
dat <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
ggplot(data2015, aes(data2015$Date, data2015$Close)) + geom_line() +
xlab("2015") + ylab("CLosing Price for the year of 2015") +
geom_vline(aes(as.Date("2015-07-01"))) + geom_hline(aes(min(data2015$Close)))
source('~/Documents/Yahoo Finance/finance.R', echo=TRUE)
install.packages("ggplot2")
install.packages("quantmod")
install.packages("quantmod")
finance$Date <- as.Date(finance$Date,"%m/%d/%y")
print(finance$Date)
print(finance)
print(finance)
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
print(finance)
finance$Date <- as.Date(finance$Date,"%m/%d/%y")
print(finance$Date)
print(finance$Date)
finance$Date <- as.Date(finance$Date,"%m/%d/%y")
print(finance$Date)
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
print(finance$Date)
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
print(finance$Date)
finance$Date <- as.Date(finance$Date,"%m/%d/%y")
print(finance$Date)
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
print(finance$Date)
finance$Date <- as.Date(finance$Date,"%m/%d/%y")
print(finance$Date)
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=FALSE)
print(finance$Date)
#finance$Date <- as.Date(finance$Date,"%m/%d/%y")
#print(finance$Date)
jan<-as.Date("2015-01-01")
dec<-as.Date("2015-12-31")
data2015 <- subset(finance, finance$Date >= jan  & finance$Date <= dec)
print(data2015$Date)
print(data2015$Date)
ggplot(data2015, aes(data2015$Date, data2015$Close)) + geom_line() +
xlab("2015") + ylab("CLosing Price for the year of 2015") +
geom_vline(aes(as.Date("2015-07-01"))) + geom_hline(aes(min(data2015$Close)))
ggplot(data2015, aes(data2015$Date, data2015$Close)) + geom_line() +
xlab("2015") + ylab("CLosing Price for the year of 2015"))
ggplot(data2015, aes(data2015$Date, data2015$Close)) + geom_line() +
xlab("2015") + ylab("CLosing Price for the year of 2015")
data2015 <- subset(finance, finance$Date >= jan  & finance$Date <= dec)
print(data2015$Date)
plot(data2015$Date,data2015$Close, xlab='2015',ylab='Closing price',main = 'Closing prices in 2015')
data2015 <- subset(finance, finance$Date >= jan  & finance$Date <= dec)
print(data2015$Date)
print(data2015$Close)
plot(data2015$Date,data2015$Close, xlab='2015',ylab='Closing price',main = 'Closing prices in 2015')
print(finance$Date)
data2015 <- subset(finance, finance$Date >= jan  & finance$Date <= dec)
print(data2015$Date)
print(data2015$Close)
ggplot(data2015, aes(data2015$Date, data2015$Close))
ts<-xts(data2015$Close,data2015$Date)
returns<-data.frame(monthlyReturn(ts))
write.csv(returns, file = "SPYReturn.csv")
ggplot(data2015, aes(data2015$Close,data2015$Date))
plot(data2015$Date,data2015$Close, xlab='2015',ylab='Closing price',main = 'Closing prices in 2015')
summary(data2015$Date)
summary(data2015$Close)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
#print(finance$Date)
jan<-as.Date("2015-01-01")
dec<-as.Date("2015-12-31")
data2015 <- subset(finance, finance$Date >= jan  & finance$Date <= dec)
print(data2015$Date)
print(finance$Date)
financedata$Date <- as.Date(financedata$Date,format = "%m/%d/%Y")
financedata = read.csv("table.csv", header = TRUE,stringsAsFactors=F)
financedata$Date <- as.Date(financedata$Date,format = "%m/%d/%Y")
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
jan<-as.Date("2015-01-01")
dec<-as.Date("2015-12-31")
data2015 <- subset(finance, finance$Date >= jan  & finance$Date <= dec)
print(data2015$Date)
print(data2015$Close)
plot(data2015$Date,data2015$Close, xlab='2015',ylab='Closing price',main = 'Closing prices in 2015')
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
financed$Date <- as.Date(financed$Date,format = "%m/%d/%y")
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
finance$Date <- as.Date(finance$Date,format = "%m/%b/%d")
print(finance$Date)
jan<-as.Date("2015-01-01")
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
setwd('~/Documents/Yahoo Finance')
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
#finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
#print(finance$Date)
jan<-as.Date("2015-01-01")
dec<-as.Date("2015-12-31")
data2015 <- subset(finance, as.Date(finance$Date) >= jan  & as.Date(finance$Date) <= dec)
print(data2015$Date)
print(data2015$Close)
plot(data2015$Date,data2015$Close, xlab='2015',ylab='Closing price',main = 'Closing prices in 2015')
abline(v=as.Date("2015-07-01"), h=min(data2015$Close))
ggplot(data2015, aes(data2015$Close,data2015$Date))
ggplot(data2015, aes(data2015$Close,data2015$Date) + geom_line())
ggplot(data2015, aes(data2015$Close,data2015$Date) + geom_point())
data <- subset(finance, as.Date(finance$Date) >= jan  & as.Date(finance$Date) <= dec)
print(data$Date)
print(data$Close)
plot(data$Date,data$Close, xlab='2015',ylab='Closing price',main = 'Closing prices in 2015')
abline(v=as.Date("2015-07-01"), h=min(data$Close))
ggplot(data, aes(data$Date,data$Close) + geom_point())
ggplot(data, aes(data$Low,data$Close) + geom_point())
require(ggplot2)
ggplot(data, aes(data$Date,data$Close) + geom_point())
ggplot(data, aes(data$Date,data$Close), geom_point())
ggplot(data=data, aes(data$Date,data$Close), geom_point(),)
plot(data$Date,data$Close, xlab='2015',ylab='Closing price',main = 'Closing prices in 2015')
plot(data$Date,data$Close, xlab='2015',ylab='Closing price')
require(ggplot2)
plot(data$Date,data$Close, xlab='2015',ylab='Closing price')
setwd('~/Documents/Yahoo Finance')
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
setwd('~/Documents/Yahoo Finance')
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
setwd('~/Documents/Yahoo Finance')
finance<-read.csv("table.csv", header = TRUE, stringsAsFactors=F)
print(finance$Date)
finance$Date <- as.Date(finance$Date,format = "%m/%d/%y")
print(finance$Date)
jan<-as.Date("2015-01-01")
dec<-as.Date("2015-12-31")
data <- subset(finance, as.Date(finance$Date) >= jan  & as.Date(finance$Date) <= dec)
print(data$Date)
print(data$Close)
require(ggplot2)
plot(data$Date,data$Close, xlab='2015',ylab='Closing price')
abline(v=as.Date("2015-07-01"), h=min(data$Close))
ggplot(data=data, aes(data$Date,data$Close), geom_point())
ggplot(data, aes(data$Date,data$Close), geom_point())
require(ggplot2)
plot(data$Date,data$Close, xlab='2015',ylab='Closing price')
plot(data$Date,data$Close, xlab='For the year of 2015',ylab='Closing prices')
abline(v=as.Date("2015-07-01"), h=min(data$Close))
ggplot(data, aes(data$Date,data$Close), geom_point())
ggplot(data, aes(data$Date,data$Close) + geom_point())
ggplot(data, aes(data$Date,data$Close), geom_point())
ggplot(data, aes(data$Date,data$Close), geom_line())
ts<-xts(data2015$Close,data2015$Date)
ts<-xts(data$Close,data$Date)
returns<-data.frame(monthlyReturn(ts))
write.csv(returns, file = "SPYReturn.csv")
plot(data$Date,data$Close, xlab='For the year of 2015',ylab='Closing prices')
abline(v=as.Date("2015-07-01"), h=min(data$Close))
r<-data.pct_change()
abline(v=as.Date("2015-07-01"), col="red", h=min(data$Close), col="black")
abline(v=as.Date("2015-07-01"), col="red", h=min(data$Close))
febdata <- subset(finance, as.Date(finance$Date) >= "2015-02-01"  & as.Date(finance$Date) <= "2015-02-28")
print(febdata$Date)
require(ggplot2)
plot(data$Date,data$Close, xlab='For the year of 2015',ylab='Closing prices')
abline(v=as.Date("2015-07-01"), col="red", h=min(febdata$Close))
write.csv(returns, file = "SPYReturn.csv", row.names=FALSE)
write.csv(returns, file = "SPYReturn.csv",)
timeseries<-xts(data$Close,data$Date)
returns<-data.frame(monthlyReturn(timeseries))
#creating a csv with two columns month and return
write.csv(returns, file = "SPYReturn.csv")
#creating the final output file
write.csv(do, file = "DesiredOutput.csv")
download.file("http://www.sectorspdr.com/sectorspdr/sector/xlf/holdings", "holdings.csv", method, quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
download.file("http://www.sectorspdr.com/sectorspdr/sector/xlf/holdings", "holdings.csv", auto, quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
download.file("http://www.sectorspdr.com/sectorspdr/sector/xlf/holdings", "holdings.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
download.file("http://www.sectorspdr.com/sectorspdr/sector/xlf/holdings", "~/Documents/holdings.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
spdrHoldings(XLF)
source('~/Documents/holdings.R', echo=TRUE)
source('~/Documents/holdings.R', echo=TRUE)
spdrHoldings(XLF)
source('~/Documents/holdings.R', echo=TRUE)
install.packages("data.table")
spdrHoldings<-function(symbol)
{
if (symbol=="XLF")
{
download.file("http://www.sectorspdr.com/sectorspdr/sector/xlf/holdings", "~/Documents/holdings-xlf.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
xlf<-read.csv("~/Documents/holdings-xlf.csv", header = TRUE)
return(xlf)
} else if (symbol=="XLE") {
download.file("http://www.sectorspdr.com/sectorspdr/sector/xle/holdings", "~/Documents/holdings-xle.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
xle<-read.csv("~/Documents/holdings-xle.csv", header = TRUE)
return(xle)
}
}
spdrHoldings(XLF)
spdrHoldings(XLF)
source('~/Documents/holdings.R', echo=TRUE)
install.packages("data.table")
xlf<-read.csv("~/Documents/holdings-xlf.csv", header = TRUE)
download.file("http://www.sectorspdr.com/sectorspdr/sector/xlf/holdings", "~/Documents/holdings-xlf.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
xlf<-read.csv("~/Documents/holdings-xlf.csv", header = TRUE)
xlf<-read.csv("~/Documents/holdings-xlf.csv", header = TRUE, quote = "")
xlf<-read.csv("~/Documents/holdings-xlf.csv")
xlf<-read.csv("~/Documents/holdings-xlf.csv", header = TRUE, quote = "", row.names = NULL)
return(xlf)
print(xlf)
} else if (symbol=="XLE") {
download.file("http://www.sectorspdr.com/sectorspdr/sector/xle/holdings", "~/Documents/holdings-xle.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
xle<-read.csv("~/Documents/holdings-xle.csv", header = TRUE)
xle<-read.csv("~/Documents/holdings-xle.csv", header = TRUE, quote = "", row.names = NULL)
return(xle)
print(xle)
}
}
spdrHoldings(XLF)
spdrHoldings("XLF")
writeLines(xlf)
return(xlf)
writeLines(xlf)
print(xlf)
xlf<-read.csv("~/Documents/holdings-xlf.csv", header = TRUE, quote = "", row.names = NULL)
source('~/Documents/holdings.R', echo=TRUE)
spdrHoldings("XLF")
spdrHoldings("XLE")
library(stringr)
str_replace(xlf, ".[a-z]$", "/[A-Z]")
source('~/Documents/holdings.R', echo=TRUE)
install.packages("data.table")
cleanHoldingsData<-function(etf){
str_replace(xlf, ".[a-z]$", "/[A-Z]")
download.file("http://www.sectorspdr.com/sectorspdr/sector/xlf/holdings", "~/Documents/holdings-xlf.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
xlf<-read.csv("~/Documents/holdings-xlf.csv", header = TRUE, quote = "", row.names = NULL)
print(xlf)
} else if (symbol=="XLE") {
download.file("http://www.sectorspdr.com/sectorspdr/sector/xle/holdings", "~/Documents/holdings-xle.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
xle<-read.csv("~/Documents/holdings-xle.csv", header = TRUE, quote = "", row.names = NULL)
print(xle)
}
}
spdrHoldings("XLF")
spdrHoldings("XLE")
cleanHoldingsData<-function(etf){
str_replace(xlf, ".[a-z]$", "/[A-Z]")
#gsub(pattern, replacement, x, ignore.case = FALSE, perl = FALSE,
#fixed = FALSE, useBytes = FALSE)
}
download.file("http://www.sectorspdr.com/sectorspdr/sector/xlf/holdings", "~/Documents/holdings-xlf.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
download.file("http://www.sectorspdr.com/sectorspdr/IDCO.Client.Spdrs.Holdings/Export/ExportCsv?symbol=xle", "~/Documents/holdings-xle.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
xle<-read.csv("~/Documents/holdings-xle.csv", header = TRUE, quote = "", row.names = NULL)
xle<-read.csv("~/Documents/holdings-xle.csv", header = TRUE, quote = "", row.names = NULL)
xle<-read.table("~/Documents/holdings-xle.csv", header = TRUE, quote = "", row.names = NULL)
xle<-read.table("~/Documents/holdings-xle.csv", header = TRUE, quote = "", row.names = NULL, skip = 1)
xle<-read.csv("~/Documents/holdings-xle.csv", header = TRUE, quote = "", row.names = NULL, skip = 1)
print(xle)
xle<-read.csv("~/Documents/holdings-xle.csv", header = TRUE, quote = "",  skip = 1)
print(xle)
download.file("http://www.sectorspdr.com/sectorspdr/IDCO.Client.Spdrs.Holdings/Export/ExportCsv?symbol=xlf", "~/Documents/holdings-xlf.csv", method="auto", quiet = FALSE, mode = "w",
cacheOK = TRUE,
extra = getOption("download.file.extra"))
xlf<-read.csv("~/Documents/holdings-xlf.csv", header = TRUE, quote = "", row.names = NULL,  skip = 1)
print(xlf)
cleanHoldingsData<-function(etf){
str_replace(xlf, ".[a-z]$", "/[A-Z]")
print(xlf)
#gsub(pattern, replacement, x, ignore.case = FALSE, perl = FALSE,
#fixed = FALSE, useBytes = FALSE)
}
print(xlf)
source('~/Documents/holdings.R', echo=TRUE)
install.packages("data.table")
str_replace(xlf, ".[a-z]$", "/[A-Z]")
source('~/Documents/holdings.R', echo=TRUE)
str_replace(xlf, ".[a-z]$", "/[A-Z]")
print(xlf)
str_replace(xlf, ".b$", "/B")
print(xlf)
